<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:bean="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  		 	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
           	
	<!-- RSS httpBasci auth, clone-session for multiple thread, method auth, integration cookie login, login then redirect to last access page, login error echo back user name-->
	
  	<http security="none" pattern="/static/**"/>
  	<http security="none" pattern="/plugins/**"/>
  	<http security="none" pattern="/skins/**"/>
  	<http security="none" pattern="/themes/**"/>
  	<http security="none" pattern="/widgets/**" />

	<http  realm="@TOKEN.APP.NAME@ - Authentication" pattern="/**/feed.do*">
		<http-basic />
	</http>

	<http access-decision-manager-ref="accessDecisionManager" pattern="/**" >
	
		<form-login login-page='/signin' default-target-url="/index.jsp" 
				authentication-failure-handler-ref="authenticationFailureHandler" 
				authentication-success-handler-ref="authenticationSuccessHandler"/>
		
		<!-- 90 days remember-me, 'changethis' has Hardcode in WsConstants -->
		<logout delete-cookies="JSESSIONID" logout-success-url="/index.jsp"/>
		<access-denied-handler ref="accessDeniedHandler"/>
		
		<remember-me services-ref="rememberMeServices"/> 
		<anonymous key="changethis" username="anonymousUser,ROLE_SYS_ANONYMOUS"/>
		
	</http>
	
	<bean:bean id="securityMetadataSource" class="com.edgenius.wiki.security.acegi.DBFilterInvocationDefinitionSource">
		<bean:property name="convertUrlToLowercaseBeforeComparison" value="true"/>
		<bean:property name="securityService" ref="securityService"/>
	</bean:bean>
	
	<bean:bean id="redirectStrategy" class="com.edgenius.wiki.security.acegi.AuthenticationRedirectStrategy"/>
	<bean:bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<bean:property name="redirectStrategy" ref="redirectStrategy"/>
	</bean:bean>
	<bean:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<bean:property name="redirectStrategy" ref="redirectStrategy"/>
	</bean:bean>
	
	<!-- ================================================================================================================================================= -->
	<!--  AUTHENTICATION -->	
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDAO">
			<password-encoder hash="md5" />  <!-- ???NDPNDP: Cache??? --> 
		</authentication-provider>
		<authentication-provider ref="anonymousAuthenticationProvider"/>
		<authentication-provider ref="rememberMeAuthenticationProvider"/>
	</authentication-manager>
	
  	<bean:bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
		<bean:constructor-arg value="changeThis"/>  <!-- Hardcode WsConstants -->
	</bean:bean>
	<bean:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<bean:constructor-arg value="changeThis"/>  <!-- Hardcode WsConstants -->
	</bean:bean>
	<bean:bean id="rememberMeServices" class="com.edgenius.wiki.security.acegi.TokenBasedRememberMeServices">
		<bean:property name="userDetailsService" ref="userDAO"/>
		<bean:property name="tokenValiditySeconds" value="7776000"/> <!-- 90 days -->
		<bean:property name="key" value="changeThis"/> <!-- Hardcode WsConstants -->
	</bean:bean>
  
  
  	<!-- ================================================================================================================================================= -->
	<!--  Authorization -->
	<bean:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<bean:property name="allowIfAllAbstainDecisions" value="false"/>
		<bean:property name="decisionVoters">
			<bean:list>
				<bean:bean class="com.edgenius.wiki.security.acegi.AllowAllVoter"/>
				<bean:bean class="com.edgenius.wiki.security.acegi.UserVoter"/>
				<bean:bean class="org.springframework.security.access.vote.RoleVoter"/>
				<bean:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
			</bean:list>
		</bean:property>
	</bean:bean>
	<bean:bean id="accessDeniedHandler" class="com.edgenius.wiki.security.acegi.AccessDeniedHandlerImpl">
		<bean:property name="errorPage" value="/403.jsp"/>
	</bean:bean>
	
	<!-- ================================================================================================================================================= -->
	<!--  Methods  -->
	<bean:bean id="methodExceptionHandler" class="com.edgenius.wiki.security.acegi.MethodExceptionHandler">
		<bean:property name="accessDeniedHandler"  ref="accessDeniedHandler"/>
	</bean:bean>
	
	<bean:bean id="methodSecurityInterceptor" class="com.edgenius.wiki.security.acegi.MethodSecurityInterceptor">
        <bean:property name="authenticationManager" ref="authenticationManager"/>
        <bean:property name="accessDecisionManager" ref="accessDecisionManager"/>
        
        <bean:property name="afterInvocationManager" ref="afterInvocationManager"/>
        <bean:property name="securityMetadataSource" ref="methodSecurityMetadataSource"/>
        <bean:property name="methodExceptionHandler" ref="methodExceptionHandler"/>
    </bean:bean>

    
    <bean:bean id="afterInvocationManager" class="org.springframework.security.access.intercept.AfterInvocationProviderManager">
    	<bean:property name="providers">
    		<bean:list>
    			<bean:ref local="dbAfterInvocationProvider"/>
			</bean:list>
    	</bean:property>
    </bean:bean>
	        
	<bean:bean id="dbAfterInvocationProvider" class="com.edgenius.wiki.security.acegi.DBAfterInvocationProvider">
		<bean:property name="accessDecisionManager" ref="accessDecisionManager"/>
		<bean:property name="securityService" ref="securityService"/>
	</bean:bean>
	
	<bean:bean id="methodSecurityMetadataSource" class="com.edgenius.wiki.security.acegi.DBMethodDefinitionSource">
		<bean:property name="securityService" ref="securityService"/>
	</bean:bean>
	

	<bean:bean name="userCacheProvider" class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
		<bean:property name="cache" ref="userCache"/>
	</bean:bean>
		
	<bean:bean id="exceptionTranslationFilter" class="com.edgenius.wiki.security.acegi.ExceptionTranslationFilter">
		<bean:constructor-arg>
			<bean:bean class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
				<bean:property name="loginFormUrl" value="/signin" />
			</bean:bean>
		</bean:constructor-arg>
		<bean:constructor-arg>
			<bean:bean class="org.springframework.security.web.savedrequest.HttpSessionRequestCache"/>
		</bean:constructor-arg>
	</bean:bean>

	<!-- ================================================================================================================================================= -->
	<!--  Beans -->
	<!-- ================================================================================================================================================= -->
	<bean:bean id="pageSecurityInterceptor" class="org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor">
		<bean:constructor-arg>
			<bean:bean class="com.edgenius.wiki.security.acegi.PageMethodBeforeAdvice">
		        <bean:property name="methodExceptionHandler" ref="methodExceptionHandler"/>
			</bean:bean>
		</bean:constructor-arg>
    </bean:bean>
	<bean:bean id="userSecurityInterceptor" class="org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor">
		<bean:constructor-arg>
			<bean:bean class="com.edgenius.wiki.security.acegi.UserMethodBeforeAdvice">
				<bean:property name="securityService" ref="securityService"/>
		        <bean:property name="methodExceptionHandler" ref="methodExceptionHandler"/>
			</bean:bean>
		</bean:constructor-arg>
    </bean:bean>
	<bean:bean id="patternStrategy" class="com.edgenius.wiki.security.strategy.PatternStrategy" autowire="byName">
		<bean:property name="patternFactoryFactory" ref="patternFactoryFactory"/>
		<bean:property name="methodValueProviderList">
			<bean:list>
				<bean:ref local="securityDummyMethodValueProvider"/>
				<bean:ref local="pageMethodValueProvider"/>
				<bean:ref local="spaceMethodValueProvider"/>
				<bean:ref local="commentMethodValueProvider"/>
				<bean:ref local="tagMethodValueProvider"/>
				<bean:ref local="diffMethodValueProvider"/>
			</bean:list>
		</bean:property>
		<bean:property name="urlValueProviderList">
			<bean:list>
				<bean:ref local="spaceURLValueProvider"/>
			</bean:list>
		</bean:property>
		<bean:property name="policyCache" ref="policyCache"/>
	</bean:bean>
	
	<bean:bean id="policyCache" class="com.edgenius.wiki.security.service.PolicyCache">
		<bean:property name="cache" ref="policyCacheContainer"/>
	</bean:bean>
	<bean:bean id="patternFactoryFactory" class="com.edgenius.wiki.security.strategy.PatternFactoryFactory" >
		<bean:property name="pagePatternFactory">
			<bean:bean class="com.edgenius.wiki.security.strategy.PagePatternFactory" autowire="byName"/>
		</bean:property>
		<bean:property name="spacePatternFactory">
			<bean:bean class="com.edgenius.wiki.security.strategy.SpacePatternFactory" autowire="byName"/>
		</bean:property>
		<bean:property name="instancePatternFactory">
			<bean:bean class="com.edgenius.wiki.security.strategy.InstancePatternFactory" autowire="byName"/>
		</bean:property>
		<bean:property name="widgetPatternFactory">
			<bean:bean class="com.edgenius.wiki.security.strategy.WidgetPatternFactory" autowire="byName"/>
		</bean:property>
	</bean:bean>
	
	<bean:bean id="securityService" class="com.edgenius.wiki.security.service.SecurityServiceImpl" autowire="byName">
		<bean:property name="initialSpaceReadingCacheAtStart" value="false"/>
  		<bean:property name="patternStrategy" ref="patternStrategy"/>
  		<bean:property name="authenticationManager" ref="authenticationManager"/>

  	</bean:bean>
	<bean:bean id="pageMethodValueProvider" class="com.edgenius.wiki.service.impl.PageMethodValueProvider"/>
	<bean:bean id="spaceMethodValueProvider" class="com.edgenius.wiki.service.impl.SpaceMethodValueProvider"/>
	<bean:bean id="commentMethodValueProvider" class="com.edgenius.wiki.service.impl.CommentMethodValueProvider"/>
	<bean:bean id="tagMethodValueProvider" class="com.edgenius.wiki.service.impl.TagMethodValueProvider"/>
	<bean:bean id="diffMethodValueProvider" class="com.edgenius.wiki.service.impl.DiffMethodValueProvider"/>
	<bean:bean id="spaceURLValueProvider" class="com.edgenius.wiki.security.strategy.SpaceURLValueProvider"/>
	<bean:bean id="securityDummyMethodValueProvider" class="com.edgenius.wiki.service.SecurityDummyMethodValueProvider"/>
	
	<!-- Start captcha service -->		
	<!--  so far ,this filter only handle normal HTTP request but it can not handle GWT Ajax call --> 	
	<bean:bean id="captchaValidationProcessingFilter" class="com.edgenius.wiki.security.acegi.CaptchaValidationProcessingFilter">
	  <bean:property name="captchaService" ref="captchaService" />
	  <bean:property name="errorPage" value="/captcha.jsp"/>
	</bean:bean>
		 
	<bean:bean id="captchaReqiredFilterService" class="com.edgenius.wiki.security.service.CaptchaReqiredFilterServiceImpl" >
	   <bean:property name="loginTimesCache" ref="loginTimesCache" />
	   <!--  unit: second , now it is 30 minutes-->
	   <bean:property name="retryPeriodThreshold" value="1800" />
	   <bean:property name="retryTimeThreshold" value="8" />
	</bean:bean>
	
	<bean:bean id="captchaService" class="com.edgenius.wiki.security.service.CaptchaServiceProxyImpl" >
	   <bean:property name="jcaptchaService" ref="captchaImageService" />
	</bean:bean>
	
	<bean:bean id="captchaImageService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		 <bean:property name="captchaEngine">
		 	<bean:bean class="com.edgenius.wiki.security.service.SimpleListImageCaptchaEngine"/>
		 </bean:property>
	</bean:bean>
	<!-- End captcha service -->	
	 
	<bean:bean id="securityDummy" class="com.edgenius.wiki.service.SecurityDummy"/>
	
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.SecurityDummy.check*(..))"/>
		
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.SpaceService.create*(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.SpaceService.update*(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.SpaceService.upload*(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.SpaceService.removeSpaceInDelay(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.SpaceService.undoRemoveSpace(..))"/>
		
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.getCurrentPageByTitle(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.getHomepage(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.getPage(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.getPageTree(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.getHistory(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.getHistoryPages(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.uploadAttachments(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.restorePage(..))"/>
		
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.copy(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.move(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.update*(..))"/>
		
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.save*(..))"/>
		
		
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.PageService.remove*(..))"/>
		
		
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.TagService.saveUpdatePageTag(..))"/>
		
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.CommentService.create*(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.CommentService.remove*(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.CommentService.getPageComments(..))"/>
		
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.BackupService.restore(..))"/>
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.BackupService.backup(..))"/>
		
		<!-- 
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.DiffService.*(..))"/>
		 -->
		 
		<!-- so far, does not check export security permission. It assumes all security check will be done by other method 
			which is before this service method call
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.ExportService.*(..))"/>
		
		Never do security check for renderService
		<aop:advisor advice-ref="methodSecurityInterceptor" order="40" pointcut="execution(* *..wiki.service.RenderService.*(..))"/>
		 -->
		
		<aop:advisor advice-ref="userSecurityInterceptor" order="40" pointcut="execution(* *..core.service.UserService.save*(..))"/>
		<aop:advisor advice-ref="userSecurityInterceptor" order="40" pointcut="execution(* *..core.service.UserService.update*(..))"/>
		<aop:advisor advice-ref="userSecurityInterceptor" order="40" pointcut="execution(* *..core.service.UserService.upload*(..))"/>
		
		<aop:advisor advice-ref="pageSecurityInterceptor" order="35" pointcut="execution(* *..wiki.service.PageService.getDraft(..))"/>
		<aop:advisor advice-ref="pageSecurityInterceptor" order="35" pointcut="execution(* *..wiki.service.PageService.getDraft(..))"/>
		<aop:advisor advice-ref="pageSecurityInterceptor" order="35" pointcut="execution(* *..wiki.service.PageService.getDraftPages(..))"/>
		<aop:advisor advice-ref="pageSecurityInterceptor" order="35" pointcut="execution(* *..wiki.service.PageService.removeDraft(..))"/>
		<aop:advisor advice-ref="pageSecurityInterceptor" order="35" pointcut="execution(* *..wiki.service.PageService.saveDraft(..))"/>		
	</aop:config>
	
</bean:beans>
